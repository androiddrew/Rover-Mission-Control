{"version":3,"sources":["config.js","Toolbar.js","ImageCard.js","StatusCard.js","CoreView.js","App.js","index.js"],"names":["module","exports","defaultRoverIp","styles","container","position","bottom","left","width","padding","background","color","boxShadow","textAlign","margin","toolbarColumn","borderColor","borderWidth","borderRadius","toolbarRow","paddingTop","toolbarIcon","fontSize","Toolbar","props","state","ipAddress","defaultIpAddress","handleChange","bind","handleUrlChange","e","this","setState","target","value","imageUrl","icon","buttonStyle","isConnected","isConnecting","faSpinner","spin","style","faStop","faPlay","Button","bsStyle","onClick","onConnectDisconnect","Col","mdHidden","md","Row","xs","renderConnectButton","FormControl","type","placeholder","onChange","disabled","onModeSwitch","faGamepad","React","Component","defaultProps","height","image","maxWidth","button","ImageCard","startStream","stopStream","captureStill","toggleLed","imgSrc","flashOn","prevProps","prevState","setQualityAddress","fetch","catch","err","console","log","streamAddress","captureAddress","Date","getTime","url","setLedState","faLightbulb","Grid","ButtonGroup","bsSize","paddingLeft","paddingRight","src","alt","maxHeight","overflow","header","fontWeight","dateTime","StatusCard","startDateTime","moment","currentTime","setInterval","currentDate","data","slice","Math","max","length","map","i","key","format","size","latestData","now","ms","diff","d","duration","timeSinceStart","floor","asHours","utc","avgCommInterval","hidden","parseInt","renderComms","lineColors","ReactGridLayout","WidthProvider","RGL","gridCard","backgroundColor","CoreView","wsOpen","wsClosing","wsConnecting","ip","config","connect","connectDisconnectClicked","renderGraph","wsUrl","ws","WebSocket","binaryType","error","onopen","send","onclose","onerror","evt","onmessage","byteLength","values","Float32Array","temp","accX","accY","accZ","gyroX","gyroY","gyroZ","gyroAngleX","gyroAngleY","gyroAngleZ","angleX","angleY","angleZ","filter","removeOldData","close","gridKey","title","dataKeys","strokeDasharray","tick","offset","fill","axisLine","tickLine","dataKey","stroke","x","y","w","h","className","ref","layout","generateLayout","onLayoutChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60b46bcc.chunk.js","sourcesContent":["const config = {\r\n  defaultRoverIp: 'ws://192.168.4.1:80/ws'\r\n};\r\n\r\nmodule.exports = config; \r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Col, Row, Button, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faStop, faSpinner, faGamepad } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    padding: '5px 0',\r\n    background: '#424242',\r\n    color: '#777E87',\r\n    boxShadow: '0px 0px 5px 0px rgba(25, 25, 25, 0.75)',\r\n    textAlign: 'left',\r\n    margin: 0\r\n  },\r\n  toolbarColumn: {\r\n    borderColor: 'yellow',\r\n    borderWidth: 5,\r\n    borderRadius: 2,\r\n  },\r\n  toolbarRow: {\r\n    paddingTop: 3,\r\n  },\r\n  toolbarIcon: {\r\n    color: 'white',\r\n    fontSize: '1em',\r\n  },\r\n};\r\n\r\nexport default class Toolbar extends React.Component {\r\n  static propTypes = {\r\n    defaultIpAddress: PropTypes.string,\r\n    isConnected: PropTypes.bool.isRequired,\r\n    isConnecting: PropTypes.bool.isRequired,\r\n    onConnectDisconnect: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultIpAddress: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ipAddress: this.props.defaultIpAddress,\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleUrlChange = this.handleUrlChange.bind(this);\r\n  }\r\n  \r\n  handleChange(e) {\r\n    this.setState({ ipAddress: e.target.value });\r\n  }\r\n\r\n  handleUrlChange(e) {\r\n    this.setState({ imageUrl: e.target.value });\r\n  }\r\n\r\n  renderConnectButton() {\r\n    let icon = null;\r\n    const buttonStyle = this.props.isConnected ? \"danger\" : \"success\";\r\n\r\n    if (this.props.isConnecting) {\r\n      icon = (<FontAwesomeIcon icon={faSpinner} spin style={styles.toolbarIcon} />);\r\n    } else if (this.props.isConnected) {\r\n      icon = (<FontAwesomeIcon icon={faStop} style={styles.toolbarIcon} />);\r\n    } else {\r\n      icon = (<FontAwesomeIcon icon={faPlay} style={styles.toolbarIcon} />);\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        bsStyle={ buttonStyle }\r\n        onClick={() => this.props.onConnectDisconnect(this.state.ipAddress)}\r\n        >\r\n        {icon}\r\n      </Button>\r\n    );\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div style={{...styles.container}}>\r\n        <Col mdHidden styles={styles.toolbarColumn} md={12} >\r\n          <Row xs={12}>\r\n            <Col xs={2}>\r\n              {this.renderConnectButton()}\r\n            </Col>\r\n            <Col xs={3}>\r\n              <FormControl\r\n                type=\"text\"\r\n                value={this.state.ipAddress}\r\n                placeholder=\"Enter IP Address\"\r\n                onChange={this.handleChange}\r\n                disabled={this.props.isConnected}\r\n              />\r\n            </Col>\r\n            <Col xs={3}>\r\n              <Button\r\n                bsStyle='primary'\r\n                onClick={this.props.onModeSwitch}\r\n                >\r\n                <FontAwesomeIcon icon={faGamepad} style={styles.toolbarIcon} />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button, ButtonGroup, Grid } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  image: {\r\n    maxWidth: '100%',\r\n    height: '85%',\r\n  },\r\n  button: {\r\n    padding: 4,\r\n  }\r\n};\r\n\r\nexport default class ImageCard extends React.Component {\r\n  static propTypes = {\r\n    streamAddress: PropTypes.string,\r\n    captureAddress: PropTypes.string,\r\n    setQualityAddress: PropTypes.string,\r\n    isConnected: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    streamAddress: 'http://192.168.4.10:81/stream',\r\n    captureAddress: 'http://192.168.4.10/capture',\r\n    setQualityAddress: 'http://192.168.4.10/control?var=quality&val=30',\r\n    setLedState: 'http://192.168.4.10/control?var=led&val='\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.startStream = this.startStream.bind(this);\r\n    this.stopStream = this.stopStream.bind(this);\r\n    this.captureStill = this.captureStill.bind(this);\r\n    this.toggleLed = this.toggleLed.bind(this);\r\n\r\n    this.state = {\r\n      imgSrc: '',\r\n      flashOn: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.isConnected && !prevProps.isConnected) {\r\n      if (this.props.setQualityAddress) {\r\n        fetch(this.props.setQualityAddress)\r\n        .catch((err) => console.log('Failed setting quality'));\r\n      }\r\n    }\r\n  }\r\n\r\n  startStream() {\r\n    this.setState({\r\n      imgSrc: this.props.streamAddress\r\n    });\r\n  }\r\n\r\n  stopStream() {\r\n    this.setState({\r\n      imgSrc: ''\r\n    });\r\n  }\r\n\r\n  captureStill() {\r\n    this.setState({\r\n      imgSrc: this.props.captureAddress + '?' + new Date().getTime(),\r\n    });\r\n  }\r\n\r\n  toggleLed() {\r\n    let url = this.props.setLedState\r\n    this.setState({\r\n      flashOn: !this.state.flashOn\r\n    });\r\n    if (this.state.flashOn === false) {\r\n      url += '1';\r\n    } else {\r\n      url += '0';\r\n    }\r\n\r\n    fetch(url)\r\n    .catch((err) => console.log('Failed setting LED state'));\r\n  }\r\n\r\n  render() {\r\n    let icon;\r\n\r\n    if (this.state.flashOn === true) {\r\n      icon = (<FontAwesomeIcon icon={faLightbulb} style={{ color: 'white', fontSize: '1em'}} />);\r\n    } else {\r\n      icon = (<FontAwesomeIcon icon={faLightbulb} style={{ color: 'black', fontSize: '1em'}} />);\r\n    }\r\n\r\n    return (\r\n      <Grid style={ styles.container }>\r\n        <ButtonGroup >\r\n          <Button style={styles.button} bsSize=\"small\" bsStyle=\"success\" onClick={this.startStream}>Start</Button>\r\n          <Button style={styles.button} bsSize=\"small\" bsStyle=\"danger\" onClick={this.stopStream}>Stop</Button>\r\n          <Button style={styles.button} bsSize=\"small\" bsStyle=\"primary\" onClick={this.captureStill}>Screenshot</Button>\r\n          <Button style={{...styles.button, ...{ paddingLeft: 10, paddingRight: 10}}} bsSize=\"small\" bsStyle=\"danger\" onClick={this.toggleLed}>{icon}</Button>\r\n        </ButtonGroup>\r\n        <img style = {styles.image} src={this.state.imgSrc} alt=\"\" />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {Col, Row, Grid } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'left',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    overflow: 'hidden'\r\n  },\r\n  header: {\r\n    color: 'white',\r\n    fontSize: '0.9em',\r\n    fontWeight: 'bold',\r\n  },\r\n  dateTime: {\r\n    color: 'white'\r\n  }\r\n};\r\n\r\nexport default class StatusCard extends React.Component {\r\n  static propTypes = {\r\n    latestData: PropTypes.array,\r\n  };\r\n\r\n  static defaultProps = {\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startDateTime: moment(),\r\n      currentTime: new Date()\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => this.setState({ currentDate: new Date() }), 1000);\r\n  }\r\n\r\n  renderComms(data) {\r\n    return data.slice(Math.max(data.length - 4, 1)).map((log, i) => (\r\n      <Row key={log.dateTime + i} style={styles.dateTime}>\r\n        <Col md={12}>\r\n          {`${moment(log.dateTime).format('YYYY-MM-DD HH:mm:ss.SSS')} ${log.size} bytes`}\r\n        </Col>\r\n      </Row>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.latestData;\r\n    let now = moment();\r\n    let currentTime = now.format('ll LTS');\r\n    const ms = moment(now, \"DD/MM/YYYY HH:mm:ss\").diff(moment(this.state.startDateTime, \"DD/MM/YYYY HH:mm:ss\"));\r\n    const d = moment.duration(ms);\r\n    const timeSinceStart = Math.floor(d.asHours()) + moment.utc(ms).format(\":mm:ss\");\r\n    let avgCommInterval = 0;\r\n    if (data.length > 0) {\r\n      avgCommInterval = moment(data[data.length - 1].dateTime).diff(moment(data[0].dateTime)) / data.length;\r\n    }\r\n\r\n    return (\r\n      <Grid style={ styles.container }>\r\n        <Row style={styles.header}>\r\n          <Col md={6}>\r\n            Current time\r\n          </Col>\r\n          <Col md={6}>\r\n            Elapsed Time\r\n          </Col>\r\n        </Row>\r\n        <Row style={ styles.dateTime }>\r\n          <Col md={6}>\r\n            {currentTime}\r\n          </Col>\r\n          <Col md={6}>\r\n            {timeSinceStart}\r\n          </Col>\r\n        </Row>\r\n        <Row >\r\n          <Col md={6} style={styles.header}>\r\n            {this.props.latestData.length > 0 ? 'Comms' : ''}\r\n          </Col>\r\n          <Col hidden={avgCommInterval === 0} md={6} style={styles.dateTime}>\r\n            { `Avg. interval ${parseInt(avgCommInterval)}`}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col md={6}>\r\n          {this.renderComms(this.props.latestData)}\r\n        </Col>\r\n        <Col md={6}>\r\n          N/A\r\n        </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport RGL, { WidthProvider } from \"react-grid-layout\";\r\nimport {\r\n  LineChart, Line, Label, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nimport config from './config';\r\nimport Toolbar from './Toolbar';\r\nimport ImageCard from './ImageCard';\r\nimport StatusCard from './StatusCard';\r\n\r\nconst lineColors = ['#8884d8', '#82ca9d', '#CCCC00'];\r\n\r\nconst ReactGridLayout = WidthProvider(RGL);\r\n\r\nconst styles = {\r\n  gridCard: {\r\n    backgroundColor: '#292929',\r\n    borderRadius: 10\r\n  }\r\n}\r\n\r\nexport default class CoreView extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      wsOpen: false,\r\n      wsClosing: false,\r\n      wsConnecting: false,\r\n      data: []\r\n    };\r\n\r\n    this.ip = config.defaultRoverIp;\r\n    this.connect = this.connect.bind(this);\r\n    this.connectDisconnectClicked = this.connectDisconnectClicked.bind(this);\r\n    this.renderGraph = this.renderGraph.bind(this);\r\n  }\r\n\r\n  connect(wsUrl) {\r\n    this.ws = new WebSocket(wsUrl);\r\n    this.ws.binaryType = 'arraybuffer';\r\n\r\n    if (this.state.wsClosing || this.state.wsOpen) {\r\n      console.error('ws is in closing or closed state');\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      wsConnecting: true,\r\n      wsClosing: false,\r\n    });\r\n\r\n    this.ws.onopen = () => {\r\n      console.log('WebSocket open');\r\n      this.setState({\r\n        wsOpen: true,\r\n        wsConnecting: false,\r\n        wsClosing: false,\r\n      });\r\n      this.ws.send(\"CONNECT\");\r\n    };\r\n\r\n    this.ws.onclose = () => {\r\n      console.log('WebSocket close');\r\n      this.setState({\r\n        wsOpen: false,\r\n        wsConnecting: false,\r\n        wsClosing: false,\r\n      });    \r\n    };\r\n\r\n    this.ws.onerror = (evt) => {\r\n      console.log(evt);\r\n      this.setState({\r\n        wsOpen: false,\r\n        wsConnecting: false,\r\n        wsClosing: false\r\n      });\r\n    };\r\n\r\n    this.ws.onmessage = (evt) => {\r\n      // We expect 13 float values.\r\n      if (evt.data.byteLength !== (13 * 4)) {\r\n        console.log(evt);\r\n        //console.log('Unexpected WS Bin length', evt.data.byteLength);\r\n        return;\r\n      };\r\n      \r\n      const values = new Float32Array(evt.data);\r\n      const data = {\r\n        temp: values[0],\r\n        accX: values[1],\r\n        accY: values[2],\r\n        accZ: values[3],\r\n        gyroX: values[4],\r\n        gyroY: values[5],\r\n        gyroZ: values[6],\r\n        gyroAngleX: values[7],\r\n        gyroAngleY: values[8],\r\n        gyroAngleZ: values[9],\r\n        angleX: values[10],\r\n        angleY: values[11],\r\n        angleZ: values[12],\r\n        dateTime: new Date(),\r\n        size: evt.data.byteLength\r\n      };\r\n\r\n      console.log(data);\r\n      this.setState({\r\n        data: [...this.state.data, data].filter(this.removeOldData)\r\n      });\r\n    };\r\n  }\r\n\r\n  removeOldData(data) {\r\n    const now = new Date();\r\n    return data.dateTime > new Date(now.getTime() - 10 * 1000);\r\n  }\r\n\r\n  connectDisconnectClicked(ipAddress) {\r\n    if (this.state.wsOpen) {\r\n      this.setState({\r\n        wsClosing: true,\r\n      });\r\n      this.ws.close();\r\n    } else {\r\n      this.connect(ipAddress);\r\n    }\r\n  }\r\n\r\n  renderGraph(gridKey, title, dataKeys) {\r\n    return (\r\n      <div key={gridKey} style={ styles.gridCard }>\r\n        <ResponsiveContainer>\r\n          <LineChart \r\n            data={this.state.data}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis tick={false} >\r\n              <Label value={title} offset={0} style={{fill: 'green', fontSize: '1.4em'}} position=\"insideLeft\" />\r\n            </XAxis>\r\n            <YAxis axisLine={false} tickLine={false} />\r\n            <Tooltip />\r\n            {dataKeys.map((dataKey, i) => {\r\n              return <Line key={dataKey} type=\"monotone\" dataKey={dataKey} stroke={lineColors[i % lineColors.length]} fill={lineColors[i % lineColors.length]} />\r\n            })}\r\n          </LineChart >\r\n        </ResponsiveContainer>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  generateLayout() {\r\n    return  [\r\n      {i: 'status', x: 0, y: 0, w: 4, h: 1},\r\n      {i: 'g0', x: 4, y: 0, w: 4, h: 1},\r\n      {i: 'g1', x: 8, y: 0, w: 4, h: 1},\r\n      {i: 'g2', x: 0, y: 4, w: 4, h: 1},\r\n      {i: 'g3', x: 4, y: 8, w: 4, h: 1},\r\n      {i: 'g4', x: 8, y: 8, w: 2, h: 1},\r\n      {i: 'g5', x: 10, y: 8, w: 2, h: 1},\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"drawArea\" ref=\"drawArea\" >\r\n        <Col className=\"Container\">\r\n        <ReactGridLayout\r\n          layout={this.generateLayout()}\r\n          onLayoutChange={this.onLayoutChange}\r\n          {...this.props}\r\n        >\r\n          <div key={'status'} style={ styles.gridCard }>\r\n            <StatusCard latestData={this.state.data} />\r\n          </div>\r\n\r\n          {this.renderGraph('g0', 'Gyro', ['gyroX', 'gyroY', 'gyroZ'])}\r\n          <div key={'g1'} style={ styles.gridCard }>\r\n            <ImageCard isConnected={this.state.wsOpen} />\r\n          </div>\r\n          {this.renderGraph('g2', 'Acc', ['accX', 'accY', 'accZ'])}\r\n          {this.renderGraph('g3', 'Angle', ['angleX', 'angleY', 'angleZ'])}\r\n          {this.renderGraph('g4', 'GyroAngle', ['gyroAngleX', 'gyroAngleY', 'gyroAngleZ'])}\r\n          {this.renderGraph('g5', 'Temperature', ['temp'])}\r\n        </ReactGridLayout>\r\n          <Row xs={2}>\r\n            <Toolbar\r\n              defaultIpAddress={this.ip}\r\n              isConnected={this.state.wsOpen}\r\n              isConnecting={this.state.wsConnecting}\r\n              onConnectDisconnect={this.connectDisconnectClicked}\r\n              />\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CoreView from './CoreView'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CoreView/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}